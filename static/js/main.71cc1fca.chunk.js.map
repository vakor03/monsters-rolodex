{"version":3,"sources":["compoents/card/card.component.jsx","compoents/card-list/card-list.component.jsx","compoents/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAK,UAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACxB,mCAAML,EAAMI,QAAQE,KAApB,OACA,4BACKN,EAAMI,QAAQG,YCJdC,G,MAAW,SAACR,GACrB,OAAQ,qBAAKC,UAAW,YAAhB,SACCD,EAAMS,SAASC,KACZ,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCHlCM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIC,SAAUD,EACVE,KAAM,SACNH,YAAaA,EACbX,UAAW,aC+BJe,E,kDAhCX,aAAe,IAAD,8BACV,gBAcJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IALP,E,qDASd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAOhD,WACI,MAAgCC,KAAKN,MAA9Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBACpG,OACI,sBAAK9B,UAAU,MAAf,UACI,oDACA,cAAC,EAAD,CAAWW,YAAa,kBAAmBC,aAAce,KAAKf,eAC9D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA3BlBI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.71cc1fca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className={\"card-container\"}>\r\n        <img alt={\"monster\"} src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2> {props.monster.name} </h2>\r\n        <p>\r\n            {props.monster.email}\r\n        </p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport {Card} from \"../card/card.component\";\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => {\r\n    return (<div className={\"card-list\"}>\r\n            {props.monsters.map(\r\n                monster => (<Card key={monster.id} monster={monster}/>\r\n                ))}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        onChange={handleChange}\r\n        type={'search'}\r\n        placeholder={placeholder}\r\n        className={'search'}\r\n    />\r\n);\r\n\r\n","import './App.css';\n\nimport {CardList} from \"./compoents/card-list/card-list.component\";\nimport {SearchBox} from \"./compoents/search-box/search-box.component\"\n\nimport {Component} from \"react\";\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({monsters: users}))\n    }\n\n    handleChange = (e) => {\n        this.setState({searchField: e.target.value});\n    }\n\n    render() {\n        const {monsters, searchField} = this.state;\n        const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n        return (\n            <div className=\"App\">\n                <h1> Monsters Rolodex </h1>\n                <SearchBox placeholder={'search monsters'} handleChange={this.handleChange}/>\n                <CardList monsters={filteredMonsters}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}